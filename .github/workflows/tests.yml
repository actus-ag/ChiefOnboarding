name: Tests
on: 
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        source $HOME/.cargo/env
        sudo apt-get install -y gettext
        uv sync --frozen
    - name: Run migrations
      run: |
        mv .ci_env back/back/.env
        cd back
        uv run python manage.py migrate
    - name: Test with pytest
      run: |
        cd back
        uv run django-admin compilemessages 
        uv run pytest --cov=. --cov-report=xml
    - name: Upload to coveralls
      run: |
        uv add coveralls
        cd back
        uv run coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Check formatting/linting ruff and black
      run: |
        cd back
        uv run ruff check . && uv run ruff format . --check
    - name: Check migrations
      run: |
        cd back
        uv run python manage.py makemigrations --check
    - name: Test fixtures
      run: |
        cd back
        uv run python manage.py shell < fixtures/init_testing.py
        uv run python manage.py loaddata all.json
        uv run python manage.py loaddata welcome_message.json
# credits: https://hacksoft.io/github-actions-in-action-setting-up-django-and-postgres/

services:
  postgres:
    name: PostgreSQL Database
    description: PostgreSQL database for ChiefOnboarding
    triggeredBy:
      - postDevcontainerStart
    commands:
      start: |
        docker run --rm --name chiefonboarding-postgres \
          -e POSTGRES_DB=chiefonboarding \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -p 5432:5432 \
          postgres:16
      ready: |
        timeout 60 bash -c 'until docker exec chiefonboarding-postgres pg_isready -U postgres; do sleep 1; done'

  redis:
    name: Redis Cache
    description: Redis for caching and background tasks
    triggeredBy:
      - postDevcontainerStart
    commands:
      start: |
        docker run --rm --name chiefonboarding-redis \
          -p 6379:6379 \
          redis:7-alpine
      ready: |
        timeout 30 bash -c 'until docker exec chiefonboarding-redis redis-cli ping | grep -q PONG; do sleep 1; done'

  django:
    name: Django Development Server
    description: Django web application with hot reload and database setup
    triggeredBy:
      - postDevcontainerStart
    commands:
      start: |
        export PATH="/home/vscode/.local/bin:$PATH" && \
        echo "Installing dependencies..." && \
        if ! command -v uv &> /dev/null; then
          curl -LsSf https://astral.sh/uv/install.sh | sh && \
          export PATH="/home/vscode/.local/bin:$PATH"
        fi && \
        uv sync && \
        echo "Setting up database..." && \
        if [ ! -f back/.env ]; then \
          echo "Creating .env file from .env.example..." && \
          cp back/.env.example back/.env; \
        fi && \
        echo "Running migrations..." && \
        uv run python back/manage.py migrate && \
        echo "Collecting static files..." && \
        uv run python back/manage.py collectstatic --noinput && \
        echo "Setting up development environment..." && \
        uv run python back/manage.py setup_dev_environment && \
        echo "Database ready, starting Django server..." && \
        gitpod environment port open --name django 8000 && \
        uv run python back/manage.py runserver 0.0.0.0:8000
      ready: |
        timeout 60 bash -c 'until curl -s http://localhost:8000 > /dev/null; do sleep 1; done'

tasks:
  run-tests:
    name: Run Tests
    description: Run the test suite
    triggeredBy:
      - manual
    command: |
      export PATH="/home/vscode/.local/bin:$PATH" && \
      uv run pytest back

  lint:
    name: Lint Code
    description: Run ruff linter
    triggeredBy:
      - manual
    command: |
      export PATH="/home/vscode/.local/bin:$PATH" && \
      uv run ruff check back

  format:
    name: Format Code
    description: Format code with ruff
    triggeredBy:
      - manual
    command: |
      export PATH="/home/vscode/.local/bin:$PATH" && \
      uv run ruff format back
